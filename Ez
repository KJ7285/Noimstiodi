local kijb = {}

-- UI Toggle Keybind
local toggleKey = Enum.KeyCode.RightShift
local libraryOpen = true

-- Create the UI container
function kijb:CreateLibrary(title)
    local ScreenGui = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local UIListLayout = Instance.new("UIListLayout")
    local TitleLabel = Instance.new("TextLabel")
    local ToggleButton = Instance.new("TextButton")
    local TabsHolder = Instance.new("Frame")
    local TabsList = Instance.new("UIListLayout")

    ScreenGui.Parent = game:GetService("CoreGui")
    ScreenGui.ResetOnSpawn = false

    -- Main UI Frame
    MainFrame.Parent = ScreenGui
    MainFrame.Size = UDim2.new(0, 400, 0, 300)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Active = true
    MainFrame.Draggable = true

    -- UI Layout
    UIListLayout.Parent = MainFrame
    UIListLayout.Padding = UDim.new(0, 5)

    -- Title Label
    TitleLabel.Parent = MainFrame
    TitleLabel.Size = UDim2.new(1, 0, 0, 40)
    TitleLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.Text = title
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextSize = 18

    -- Toggle Button
    ToggleButton.Parent = MainFrame
    ToggleButton.Size = UDim2.new(0, 100, 0, 30)
    ToggleButton.Position = UDim2.new(1, -110, 0, 5)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.Text = "Toggle"
    ToggleButton.Font = Enum.Font.GothamBold
    ToggleButton.TextSize = 14

    -- Tabs Holder
    TabsHolder.Parent = MainFrame
    TabsHolder.Size = UDim2.new(1, 0, 0, 40)
    TabsHolder.Position = UDim2.new(0, 0, 0, 50)
    TabsHolder.BackgroundColor3 = Color3.fromRGB(25, 25, 25)

    TabsList.Parent = TabsHolder
    TabsList.FillDirection = Enum.FillDirection.Horizontal
    TabsList.Padding = UDim.new(0, 5)

    local Library = {}
    Library.Tabs = {}

    function Library:CreateTab(tabName)
        local TabButton = Instance.new("TextButton")
        TabButton.Parent = TabsHolder
        TabButton.Size = UDim2.new(0, 100, 1, 0)
        TabButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.Text = tabName
        TabButton.Font = Enum.Font.GothamBold
        TabButton.TextSize = 14

        local TabFrame = Instance.new("Frame")
        TabFrame.Parent = MainFrame
        TabFrame.Size = UDim2.new(1, 0, 1, -90)
        TabFrame.Position = UDim2.new(0, 0, 0, 90)
        TabFrame.BackgroundTransparency = 1
        TabFrame.Visible = false

        local TabList = Instance.new("UIListLayout")
        TabList.Parent = TabFrame
        TabList.Padding = UDim.new(0, 5)

        Library.Tabs[tabName] = TabFrame

        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(Library.Tabs) do
                tab:TweenPosition(UDim2.new(0, 0, 1, -90), "Out", "Quad", 0.2, true)
                tab.Visible = false
            end
            TabFrame.Visible = true
            TabFrame:TweenPosition(UDim2.new(0, 0, 0, 90), "Out", "Quad", 0.2, true)
        end)

        local Tab = {}
        Tab.Frame = TabFrame

        function Tab:AddSlider(text, min, max, default, callback)
            local SliderFrame = Instance.new("Frame")
            SliderFrame.Parent = TabFrame
            SliderFrame.Size = UDim2.new(1, 0, 0, 50)
            SliderFrame.BackgroundTransparency = 1

            local SliderLabel = Instance.new("TextLabel")
            SliderLabel.Parent = SliderFrame
            SliderLabel.Size = UDim2.new(0.7, 0, 1, 0)
            SliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderLabel.Text = text .. ": " .. default
            SliderLabel.Font = Enum.Font.GothamBold
            SliderLabel.TextSize = 16
            SliderLabel.BackgroundTransparency = 1

            local SliderBar = Instance.new("Frame")
            SliderBar.Parent = SliderFrame
            SliderBar.Size = UDim2.new(0.3, 0, 0.5, 0)
            SliderBar.Position = UDim2.new(0.7, 0, 0.25, 0)
            SliderBar.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

            local SliderButton = Instance.new("Frame")
            SliderButton.Parent = SliderBar
            SliderButton.Size = UDim2.new(0, 10, 1, 0)
            SliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

            local dragging = false

            SliderButton.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = true
                end
            end)

            SliderButton.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)

            game:GetService("UserInputService").InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    local absSize = SliderBar.AbsoluteSize.X
                    local relPos = math.clamp((input.Position.X - SliderBar.AbsolutePosition.X) / absSize, 0, 1)
                    SliderButton.Position = UDim2.new(relPos, -5, 0, 0)
                    local value = math.floor(min + (max - min) * relPos)
                    SliderLabel.Text = text .. ": " .. value
                    callback(value)
                end
            end)
        end

        return Tab
    end

    -- Toggle UI Visibility
    ToggleButton.MouseButton1Click:Connect(function()
        MainFrame.Visible = not MainFrame.Visible
    end)

    -- Keybind Toggle
    game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
        if not processed and input.KeyCode == toggleKey then
            MainFrame.Visible = not MainFrame.Visible
        end
    end)

    return Library
end

return kijb
