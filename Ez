local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local kijb = {}

function kijb:CreateLibrary(title)
    local ScreenGui = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local TitleLabel = Instance.new("TextLabel")
    local ToggleButton = Instance.new("TextButton")
    local TabsHolder = Instance.new("Frame")
    local TabsList = Instance.new("UIListLayout")

    ScreenGui.Parent = game.CoreGui
    ScreenGui.ResetOnSpawn = false

    -- Main UI Frame
    MainFrame.Parent = ScreenGui
    MainFrame.Size = UDim2.new(0, 420, 0, 380)
    MainFrame.Position = UDim2.new(0.5, -210, 0.5, -190)
    MainFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Active = true

    -- Add rounded corners
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 12)
    UICorner.Parent = MainFrame

    -- Dragging System
    local dragging, dragInput, dragStart, startPos
    local function UpdateInput(input)
        local delta = input.Position - dragStart
        local newPosition = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        TweenService:Create(MainFrame, TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = newPosition}):Play()
    end

    MainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    MainFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            UpdateInput(input)
        end
    end)

    -- Title Label
    TitleLabel.Parent = MainFrame
    TitleLabel.Size = UDim2.new(1, 0, 0, 40)
    TitleLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.Text = title
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextSize = 18

    -- Toggle Button
    ToggleButton.Parent = MainFrame
    ToggleButton.Size = UDim2.new(0, 100, 0, 30)
    ToggleButton.Position = UDim2.new(1, -110, 0, 5)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 80)
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.Text = "Close"
    ToggleButton.Font = Enum.Font.GothamBold
    ToggleButton.TextSize = 14

    -- Tabs Holder
    TabsHolder.Parent = MainFrame
    TabsHolder.Size = UDim2.new(1, 0, 0, 50)
    TabsHolder.Position = UDim2.new(0, 0, 0, 45)
    TabsHolder.BackgroundColor3 = Color3.fromRGB(30, 30, 35)

    TabsList.Parent = TabsHolder
    TabsList.FillDirection = Enum.FillDirection.Horizontal
    TabsList.Padding = UDim.new(0, 5)

    local Library = {}
    Library.Tabs = {}

    function Library:CreateTab(tabName)
        local TabButton = Instance.new("TextButton")
        TabButton.Parent = TabsHolder
        TabButton.Size = UDim2.new(0, 120, 1, 0)
        TabButton.BackgroundColor3 = Color3.fromRGB(55, 55, 65)
        TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        TabButton.Text = tabName
        TabButton.Font = Enum.Font.GothamBold
        TabButton.TextSize = 14

        local TabFrame = Instance.new("Frame")
        TabFrame.Parent = MainFrame
        TabFrame.Size = UDim2.new(1, 0, 1, -100)
        TabFrame.Position = UDim2.new(0, 0, 0, 100)
        TabFrame.BackgroundTransparency = 1
        TabFrame.Visible = false

        local TabList = Instance.new("UIListLayout")
        TabList.Parent = TabFrame
        TabList.Padding = UDim.new(0, 5)

        Library.Tabs[tabName] = TabFrame

        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(Library.Tabs) do
                tab.Visible = false
            end
            TabFrame.Visible = true
        end)

        local Tab = {}
        Tab.Frame = TabFrame

        function Tab:AddSlider(text, min, max, default, callback)
            local SliderFrame = Instance.new("Frame")
            SliderFrame.Parent = TabFrame
            SliderFrame.Size = UDim2.new(1, 0, 0, 50)
            SliderFrame.BackgroundTransparency = 1

            local SliderLabel = Instance.new("TextLabel")
            SliderLabel.Parent = SliderFrame
            SliderLabel.Text = text .. ": " .. default
            SliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderLabel.Font = Enum.Font.GothamBold
            SliderLabel.TextSize = 16
            SliderLabel.BackgroundTransparency = 1

            local SliderButton = Instance.new("TextButton")
            SliderButton.Parent = SliderFrame
            SliderButton.Size = UDim2.new(0.3, 0, 0.5, 0)
            SliderButton.Position = UDim2.new(0.7, 0, 0.25, 0)
            SliderButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)

            SliderButton.MouseButton1Click:Connect(function()
                callback(default)
            end)
        end

        return Tab
    end

    -- Toggle UI Visibility
    ToggleButton.MouseButton1Click:Connect(function()
        local targetSize = MainFrame.Size == UDim2.new(0, 420, 0, 380) and UDim2.new(0, 420, 0, 0) or UDim2.new(0, 420, 0, 380)
        TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = targetSize}):Play()
    end)

    return Library
end

return kijb
